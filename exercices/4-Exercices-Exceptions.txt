Exercice 1: Distributeur de boissons
Scénario : Créez une fonction qui simule un distributeur de boissons. L'utilisateur saisit son choix de boisson. Si le choix n'est pas disponible, levez une `KeyError`. Gérez cette exception en informant l'utilisateur que son choix n'est pas disponible.

Exercice 2: Gestion de la calculatrice
Scénario : Écrivez un programme de calculatrice simple qui prend deux nombres et un opérateur (+, -, *, /) de l'utilisateur. Utilisez la gestion des exceptions pour gérer des opérations mathématiques incorrectes, comme la division par zéro et les saisies non numériques.

Exercice 3: Amélioration jeu 'devine'
Scénario : Concevez un jeu où l'utilisateur doit deviner un nombre entre 1 et 10. Si l'utilisateur saisit quelque chose qui n'est pas un nombre, gérez l'exception et donnez-lui une autre chance. Limitez le nombre d'essais à 3 avant d'indiquer que le jeu est terminé.

Exercice 4: Convertisseur de température
Scénario : Créez une fonction pour convertir les températures entre Celsius et Fahrenheit. Si l'utilisateur entre une valeur non numérique, utilisez une exception pour l'en informer et demandez-lui de saisir à nouveau la température. Continuez jusqu'à ce qu'une valeur valide soit entrée.

Exercice 5: Emails
Scénario : Écrivez une fonction qui valide une adresse email saisie par l'utilisateur. Si l'adresse ne contient pas "@" ou ".", levez une `ValueError`. Attrapez cette exception et demandez à l'utilisateur de saisir à nouveau l'adresse email.

Exercice 6: Gestion des ressources
Scénario : Imaginez un jeu où le joueur doit gérer des ressources (comme de l'énergie ou des munitions). Écrivez une fonction qui décrémente ces ressources. Si les ressources tombent en dessous de zéro, levez une exception personnalisée. Gérez cette exception en terminant le jeu ou en donnant au joueur une option pour récupérer des ressources.

 Conseils pour la réalisation :
- Essayez d'imaginer chaque scénario comme une situation réelle et réfléchissez à la façon dont les exceptions peuvent survenir naturellement.
- Pensez à la manière dont vous pouvez informer l'utilisateur des erreurs de manière conviviale et interactive.
- Utilisez ces exercices comme une opportunité pour non seulement pratiquer la syntaxe des exceptions, mais aussi pour améliorer la logique de votre programme et l'expérience utilisateur.

